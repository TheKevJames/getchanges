version: 2

jobs:
  lint:
    docker:
      - image: python:3.7.1
    steps:
      - checkout
      - run: pip install pre-commit
      - restore_cache:
          keys:
            - cache-pre-commit-{{ checksum ".pre-commit-config.yaml" }}
      - run: pre-commit install-hooks
      - save_cache:
          key: cache-pre-commit-{{ checksum ".pre-commit-config.yaml" }}
          paths:
            - ~/.cache/pre-commit
      - run: pre-commit run --all-files

  test-py36:
    docker:
      - image: python:3.7.4
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-pip-{{ checksum "requirements.txt" }}{{ checksum "requirements.test.txt" }}
      - run: python -m pip install -r requirements.txt
      - run: python -m pip install -r requirements.test.txt
      - save_cache:
          key: cache-pip-{{ checksum "requirements.txt" }}{{ checksum "requirements.test.txt" }}
          paths:
            - /usr/local/bin/coverage
            - /usr/local/lib/python3.6/site-packages
            - ~/.cache/pip
      - run: python setup.py check --restructuredtext --strict
      - run: python -m pytest --cov=getchanges tests/

  test-py37:
    docker:
      - image: python:3.7.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-pip-{{ checksum "requirements.txt" }}{{ checksum "requirements.test.txt" }}
      - run: python -m pip install -r requirements.txt
      - run: python -m pip install -r requirements.test.txt
      - save_cache:
          key: cache-pip-{{ checksum "requirements.txt" }}{{ checksum "requirements.test.txt" }}
          paths:
            - /usr/local/bin/coverage
            - /usr/local/lib/python3.7/site-packages
            - ~/.cache/pip
      - run: python setup.py check --restructuredtext --strict
      - run: python -m pytest --cov=getchanges tests/

  pypi:
    docker:
      - image: python:3.7.1-alpine3.8
    steps:
      - run: apk add --no-cache git openssh-client
      - run: pip install twine
      - checkout
      - deploy:
          name: upload to pypi
          command: |
            python setup.py sdist bdist_wheel
            twine upload dist/*

  github:
    docker:
      - image: alpine:3.8
    steps:
      - run: apk add --no-cache curl git openssh-client
      - checkout
      - run:
          name: install github-release
          command: |
            curl -L https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 > github-release.tar.bz2
            tar xjf github-release.tar.bz2
            rm -f github-release.tar.bz2
      - deploy:
          name: create GitHub release
          command: |
            ./bin/linux/amd64/github-release release -t "${CIRCLE_TAG}"
            cat CHANGELOG.md | ./bin/linux/amd64/github-release edit -t "${CIRCLE_TAG}" -d -

workflows:
  version: 2
  run-jobs:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/

      - test-py36:
          filters:
            tags:
              only: /.*/
      - test-py37:
          filters:
            tags:
              only: /.*/

      - pypi:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
          requires:
            - lint
            - test-py36
            - test-py37

      - github:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
          requires:
            - lint
            - test-py36
            - test-py37
